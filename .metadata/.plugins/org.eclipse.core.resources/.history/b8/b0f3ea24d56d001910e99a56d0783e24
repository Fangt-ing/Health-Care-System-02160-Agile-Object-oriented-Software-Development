package hospitalmanagementsystem.users;

import hospitalmanagementsystem.departments.*;
import hospitalmanagementsystem.*;

/**
 *
 * @author Pieter O'Hearn
 */
public class Admin extends User implements HealthStaff{
	// STATIC VARIABLES
	private static PersistenceLayer persist = new PersistenceLayer();
	
	// INSTANCE VARIABLES
	private String department;

	// CONSTRUCTORS
	/**
	 * Creates a new Admin of the Hospital Management
	 */
	public Admin(String usersName, String phone) {
		// call the super
		super(usersName, phone, "A");

		// set the department to Management
		this.department = Management.getInstance().getName();
		Management.getInstance().addUser(this);

		// Save the new User
		persist.save(this, this.userID, this.department);
	}
	
	/**
	 * Empty Constructor for the Persistence Layer.
	 */
	public Admin() {}

	// METHODS
//	/**
//	 * Creates a New User and adds it to the Hospital Management System.
//	 *
//	 * @param usersName The name of the User
//	 * @param usersAddress the Address of the User
//	 * @param phone The Phone Number of the User
//	 * @return The new User
//	 */
//	public User addUser(String usersName, String usersAddress, String phone, String typeOfUser) {
//		// check what typeOfUser
//		switch(typeOfUser) {
//			case "Admin":
//				return new Admin(usersName, phone);
//			case "Doctor":
//				return new Doctor(usersName, phone, "Emergency");
//			case "Nurse":
//				return new Nurse(usersName, phone, "Emergency");
//			default:
//				return new User(usersName, phone);
//		}
//	}
//
//	/**
//	 * Removes a User from the Hospital Management System (HMS).
//	 *
//	 * @param oldUser The user to be removed from the HMS
//	 */
//	public void removeUser(User oldUser) {
//		// remove patient from department userlist
//		switch(oldUser.getDepartment()) {
//			case "Emergency":
//				Emergency.getInstance().getUserList().remove(oldUser);
//			case "Outpatient":
//				Outpatient.getInstance().getUserList().remove(oldUser);
//			case "Inpatient":
//				Inpatient.getInstance().getUserList().remove(oldUser);
//			case "Management":
//				Management.getInstance().getUserList().remove(oldUser);
//		}
//	}

	@Override
	public String getDepartment() {
		return this.department;
	}
	
	@Override
	public void setDepartment(String newDepartment) {
		this.department = newDepartment;
	}

	@Override
	public String getType() {
		return "Admin";
	}

	// Cannot change department
	public void moveDepartment(String department) {}
}
