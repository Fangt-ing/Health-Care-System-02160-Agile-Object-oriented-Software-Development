import static org.junit.Assert.*;
import org.junit.BeforeClass;
import org.junit.Test;
import hospitalmanagementsystem.Bed;
import hospitalmanagementsystem.Patient;
import hospitalmanagementsystem.departments.Emergency;
import hospitalmanagementsystem.departments.Inpatient;

public class BedTest {
	// Beds
	static Bed b1;
	static Bed b2;
	
	// Patients
	static Patient p1;
	static Patient p2;
	static Patient p3;

	/**
	 * Initialise the variables to use in testing.
	 */
	@BeforeClass
	public static void setUpBeforeClass() {
		// create a bed in the Emergency and Inpatient departments
		b1 = new Bed("Emergency");
		b2 = new Bed("Emergency");
		
		// create 2 patients
		p1 = new Patient();
		p1.updateDepartment((Department)Emergency.getInstance());
		p2 = new Patient();
		p2.updateDepartment(Emergency.getInstance());
		p3 = new Patient();
		p3.updateDepartment(Inpatient.getInstance());
	}
	
	/**
	 * Tests the updatePatient method of the Bed class.
	 */
	@Test
	public void updatePatientTest() {
		// test adding the patient to right bed
		b1.updatePatient(p1);
		assertEquals(p1.getPatientID(), b1.getPatient());
	}
	
	/**
	 * Tests the updatePatient method of the Bed class with a patient already occupying the bed Occupied.
	 */
	@Test(expected = IllegalArgumentException.class)
	public void updatePatientOccupiedTest() {
		// try adding a null patient to the bed
		b1.updatePatient(p2);
	}
	
	/**
	 * Tests the updatePatient method of the Bed class with a patient in the wrong department.
	 */
	@Test(expected = IllegalArgumentException.class)
	public void updatePatientWrongDepartmentTest() {
		// try adding the wrong patient to bed
		b1.updatePatient(p2);
	}
	
	/**
	 * Tests the updateDepartment method of the Bed class.
	 */
	@Test
	public void updateDepartmentTest() {
		// update the department and check it has changed
		b1.updateDepartment("Inpatient");
		assertEquals("Inpatient", b1.getDepartment());
	}

}
